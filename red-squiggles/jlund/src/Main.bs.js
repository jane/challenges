// Generated by BUCKLESCRIPT VERSION 3.1.4, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var $$String = require("bs-platform/lib/js/string.js");
var Process = require("process");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

var MissingFilename = Caml_exceptions.create("Main-Jlund.MissingFilename");

function loadFile(filename) {
  return Fs.readFileSync(filename, "utf8").split("\n");
}

var match = Process.argv;

var inputFile;

if (match.length !== 3) {
  throw MissingFilename;
} else {
  inputFile = match[2];
}

var dictionary = Fs.readFileSync("../../assets/enable1.txt", "utf8").split("\n");

var input = $$Array.of_list(List.filter((function (x) {
              return x.length > 0;
            }))(List.map($$String.trim, $$Array.to_list(Fs.readFileSync(inputFile, "utf8").split("\n")))));

$$Array.iter((function (word) {
        var max = [0];
        $$Array.iter((function (x) {
                var match = word.length > x.length;
                var length = match ? x.length - 1 | 0 : word.length - 1 | 0;
                var currentMax = max[0];
                for(var i = currentMax + 1 | 0; i <= length; ++i){
                  if ($$String.sub(x, 0, i) === $$String.sub(word, 0, i)) {
                    max[0] = i;
                  }
                  
                }
                return /* () */0;
              }), dictionary);
        var match = max[0];
        console.log(match !== 0 ? $$String.sub(word, 0, max[0]) + ("<" + $$String.sub(word, max[0], word.length - max[0] | 0)) : word);
        return /* () */0;
      }), input);

exports.MissingFilename = MissingFilename;
exports.loadFile = loadFile;
exports.inputFile = inputFile;
exports.dictionary = dictionary;
exports.input = input;
/* match Not a pure module */
